/*
 * BASE STYLING
 */

.tile-row {
    *zoom: 1;
  &:before,
  &:after {
    display: table;
    content: "";
    // Fixes Opera/contenteditable bug:
    // http://nicolasgallagher.com/micro-clearfix-hack/#comment-36952
    line-height: 0;
  }
  &:after {
    clear: both;
  }
}

.tile-row .tile {
    position: relative;

    display: block;
    box-sizing: border-box;
    overflow: hidden;
    float: left;
    height: 0px;
}

.tile-row .tile .tile-content {
    position: absolute;
    top: 0px;
    left: 0px;

    display:block;
    box-sizing: border-box;
    width: 100%;
    height: 100%;
}

//Generate the core system
#tiles > .core();

//Generate specialized rows
@media (max-width: 767px) { 
    #tiles > .transforming(-tablet);
}

@media (max-width: 480px) {
    #tiles > .transforming(-phone);
}

/*
 * VARIABLES - Used for generating tile rows
 */

 @nmbrOfTiles: 12;
 @tile-margin-desktop: 12px;
 @tile-margin-tablet: 10px;
 @tile-margin-phone: 8px;

/*
 * MIXIN - Used for generating the tiles
 */

 #tiles { 
    //Base system
    .core(){
        .rowX(@index) when (@index > 0) {
            .tile-row.tiles@{index} { 
                #tiles > .tile-amount-dependant-row(@index, @tile-margin-desktop); 
            }
            .rowX(@index - 1);
        }
        .rowX(0){}

        #tiles > .tile-row-base(@tile-margin-desktop);
        .rowX(@nmbrOfTiles);
    }

    //Transforming system
    .transforming(@modifier){
        .rowXTransform(@index,@modifier) when (@index > 0) {
            .tile-row.tiles@{index}@{modifier} { 
                #tiles > .tile-amount-dependant-row-transform(@index, @tile-margin-phone,@modifier); 
            }
            .rowXTransform(@index - 1,@modifier);
        }
        .rowXTransform(0,''){}

        #tiles > .tile-row-base(@tile-margin-tablet);
        .rowXTransform(@nmbrOfTiles,@modifier);
    }

    //Base for setting up the tile system, called from core and transforming
    .tile-row-base(@tileMargin) {
        .tile-row {
            margin-left: -@tileMargin;
            > .tile {
                border-left: @tileMargin solid transparent;
            }

            //A wide tile is double the width of a normal tile
            > .tile.wide, > .tile.double {
                padding-right: @tileMargin;
            }

            //feels like a hack but it creates perfect tiles
            > .tile > .tile-content {
                margin-top: -@tileMargin;
                padding-top: @tileMargin;
            }

            //allows for nested tile-rows
             .tile.double > .tile-row, .tile.wide > .tile-row {
                margin-right: -@tileMargin;
            }
        }
    }

    //Generating the specific tile settings, called from core and transforming
    .tile-amount-dependant-row(@nmbrOfTiles,@tileMargin) {
        > .tile {
            width: 100% / @nmbrOfTiles;
            padding-bottom: 100% / @nmbrOfTiles;
        }

        > .tile.wide, > .tile.double {
            width: ((100% / @nmbrOfTiles) * 2);
        }     

        //A double tile is both double the width
        //and double the height of a normal tile
        > .tile.double {
            padding-bottom: ((100% / @nmbrOfTiles) * 2);
        }           
    }

    //Generating the specific tile settings for transforming tiles, called from core and transforming
    .tile-amount-dependant-row-transform(@nmbrOfTiles,@tileMargin,@modifier) {
        > .tile, > .tile@{modifier} {
            width: 100% / @nmbrOfTiles;
            padding-bottom: 100% / @nmbrOfTiles;
        }

        > .tile.wide, > .tile.double, > .tile.wide@{modifier}, > .tile.double@{modifier} {
            width: ((100% / @nmbrOfTiles) * 2);
        }     

        //A double tile is both double the width
        //and double the height of a normal tile
        > .tile.double, > .tile.double@{modifier} {
            padding-bottom: ((100% / @nmbrOfTiles) * 2);
        }           
    }
}