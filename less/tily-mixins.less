/*
 * MIXIN - Used for generating the tiles
 */

 #tiles { 
    //Base system
    .core(@nmbrOfTiles, @tileMargin){
        .rowX(@index) when (@index > 0) {
            .tile-row.tiles@{index} { 
                #tiles > .tile-amount-dependant-row(@index, @tileMargin); 
            }
            .rowX(@index - 1);
        }
        .rowX(0){}

        #tiles > .tile-row-base(@tileMargin);
        .rowX(@nmbrOfTiles);
    }

    //Transforming system
    .transforming(@nmbrOfTiles, @tileMargin, @modifier){
        .rowXTransform(@index,@modifier) when (@index > 0) {
            .tile-row.tiles@{index}@{modifier} { 
                #tiles > .tile-amount-dependant-row-transform(@index, @tile-margin-phone,@modifier); 
            }
            .rowXTransform(@index - 1,@modifier);
        }
        .rowXTransform(0,''){}

        #tiles > .tile-row-base(@tileMargin);
        .rowXTransform(@nmbrOfTiles,@modifier);
    }

    //Base for setting up the tile system, called from core and transforming
    .tile-row-base(@tileMargin) {
        .tile-row {
            margin-left: -@tileMargin;
            > .tile {
                border-left: @tileMargin solid transparent;
            }

            //A wide tile is double the width of a normal tile
            > .tile.wide, > .tile.double {
                padding-right: @tileMargin;
            }

            //feels like a hack but it creates perfect tiles
            > .tile > .tile-content {
                margin-top: -@tileMargin;
                padding-top: @tileMargin;
            }

            //allows for nested tile-rows
             .tile.double > .tile-row, .tile.wide > .tile-row {
                margin-right: -@tileMargin;
            }
        }
    }

    //Generating the specific tile settings, called from core and transforming
    .tile-amount-dependant-row(@nmbrOfTiles,@tileMargin) {
        > .tile {
            width: 100% / @nmbrOfTiles;
            padding-bottom: 100% / @nmbrOfTiles;
        }

        > .tile.wide, > .tile.double {
            width: ((100% / @nmbrOfTiles) * 2);
        }     

        //A double tile is both double the width
        //and double the height of a normal tile
        > .tile.double {
            padding-bottom: ((100% / @nmbrOfTiles) * 2);
        }           
    }

    //Generating the specific tile settings for transforming tiles, called from core and transforming
    .tile-amount-dependant-row-transform(@nmbrOfTiles,@tileMargin,@modifier) {
        > .tile, > .tile@{modifier} {
            width: 100% / @nmbrOfTiles;
            padding-bottom: 100% / @nmbrOfTiles;
        }

        > .tile.wide, > .tile.double, > .tile.wide@{modifier}, > .tile.double@{modifier} {
            width: ((100% / @nmbrOfTiles) * 2);
        }     

        //A double tile is both double the width
        //and double the height of a normal tile
        > .tile.double, > .tile.double@{modifier} {
            padding-bottom: ((100% / @nmbrOfTiles) * 2);
        }           
    }
}